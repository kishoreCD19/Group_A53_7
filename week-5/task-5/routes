const router = require('express').Router();
let Exercise = require('../models/exercise.model');

// Get All Exercises
router.route('/').get((req, res) => {
  Exercise.find()
    .then(exercises => res.json(exercises))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Add Exercise
router.route('/add').post((req, res) => {
  const exercisename = req.body.exercisename;
  const type = req.body.type;
  const category = req.body.category;  
  const discription = req.body.discription;
  const progressionId = req.body.progressionId;
  const userId = req.body.userId;

  const newExercise = new Exercise({
    exercisename,
    type,
    category,
    discription,
    progressionId,
    userId
  });

  newExercise.save()
  .then(newExercise => res.json({'data': 'Exercise added!', 'id': newExercise._id}))
  .catch(err => res.status(400).json('Error: ' + err));
});

// Get Exercise
router.route('/:id').get((req, res) => {
  Exercise.findById(req.params.id)
    .then(exercise => res.json(exercise))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Delete Exercise
router.route('/:id').delete((req, res) => {
  Exercise.findByIdAndDelete(req.params.id)
    .then(() => res.json('Exercise deleted.'))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Update Exercise
router.route('/update/:id').post((req, res) => {
  Exercise.findById(req.params.id)
    .then(exercise => {
      exercise.exercisename = req.body.exercisename;
      exercise.type = req.body.type;
      exercise.category = req.body.category;
      exercise.discription = req.body.discription;
      exercise.progressionId = req.body.progressionId;
      exercise.userId = req.body.userId;

      exercise.save()
      .then(newExercise => res.json({'data': 'Exercise Updated!', 'id': newExercise._id}))
      .catch(err => res.status(400).json('Error: ' + err));
    })
    .catch(err => res.status(400).json('Error: ' + err));
});

module.exports = router;const router = require('express').Router();
let Progression = require('../models/progression.model');

// Get All Progressions
router.route('/').get((req, res) => {
    Progression.find()
    .then(progressions => res.json(progressions))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Add Progression
router.route('/add').post((req, res) => {
  const progname = req.body.progname;
  const category = req.body.category;
  const discription = req.body.discription;
  const exercises = req.body.exercises;

  const newProgression = new Progression({
    progname,
    category,
    discription,
    exercises
  });

  newProgression.save()
  .then((response) => res.json({'data': 'Progression added!', 'id': response._id}))
  .catch(err => res.status(400).json('Error: ' + err));
});

// Get Progression
router.route('/:id').get((req, res) => {
    Progression.findById(req.params.id)
    .then(progression => res.json(progression))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Delete Progression
router.route('/:id').delete((req, res) => {
    Progression.findByIdAndDelete(req.params.id)
    .then(() => res.json('Progression deleted.'))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Update Progression
router.route('/update/:id').post((req, res) => {
    Progression.findById(req.params.id)
    .then(progression => {
      progression.progname = req.body.progname;
      progression.category = req.body.category;
      progression.discription = req.body.discription;
      progression.exercises = req.body.exercises;

      progression.save()
      .then((response) => res.json({'data': 'Progression Updated!', 'id': response._id}))
        .catch(err => res.status(400).json('Error: ' + err));
    })
    .catch(err => res.status(400).json('Error: ' + err));
});

module.exports = router;
const router = require('express').Router();
let Routine = require('../models/routine.model');

// Get All Routines
router.route('/').get((req, res) => {
    Routine.find()
    .then(routines => res.json(routines))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Add Routine
router.route('/add').post((req, res) => {
  const routinename = req.body.routinename;
  const routinedetail = req.body.routinedetail;
  const routinetype = req.body.routinetype;

  const newRoutine = new Routine({
    routinename,
    routinedetail,
    routinetype
  });

  newRoutine.save()
  .then(() => res.json('Routine added!'))
  .catch(err => res.status(400).json('Error: ' + err));
});

// Get Routine
router.route('/:id').get((req, res) => {
  Routine.findById(req.params.id)
    .then(routine => res.json(routine))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Delete Routine
router.route('/:id').delete((req, res) => {
  Routine.findByIdAndDelete(req.params.id)
    .then(() => res.json('Routine deleted.'))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Update Routine
router.route('/update/:id').post((req, res) => {
  Routine.findById(req.params.id)
    .then(routine => {
      routine.routinename = req.body.routinename;
      routine.routinedetail = req.body.routinedetail;
      routine.routinetype = req.body.routinetype;

      routine.save()
        .then(() => res.json('Routine updated!'))
        .catch(err => res.status(400).json('Error: ' + err));
    })
    .catch(err => res.status(400).json('Error: ' + err));
});

module.exports = router;
const router = require('express').Router();
let User = require('../models/user.model');

// Get All Users
router.route('/').get((req, res) => {
  User.find()
    .then(users => res.json(users))
    .catch(err => res.status(400).json('Error: ' + err));
});

//Add User
router.route('/add').post((req, res) => {
  const username = req.body.username;
  const gender = req.body.gender;
  const age = Number(req.body.age);
  const weight = Number(req.body.weight);
  const height = Number(req.body.height);
  const unit = req.body.unit;
  const activity = req.body.activity;
  const bmi = Number(req.body.bmi);
  const bmiCategory = req.body.bmiCategory;
  const bmr = Number(req.body.bmr);
  const dailycalories = Number(req.body.dailycalories);

  const newUser = new User({username, gender, age, weight, height, unit, activity, bmi, bmiCategory, bmr, dailycalories});

  newUser.save()
  .then(response => res.json({'data': 'User added!', 'id': response._id}))
  .catch(err => res.status(400).json('Error: ' + err));
});

// Get User
router.route('/:id').get((req, res) => {
  User.findById(req.params.id)
    .then(user => res.json(user))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Delete User
router.route('/:id').delete((req, res) => {
  User.findByIdAndDelete(req.params.id)
    .then(() => res.json('User deleted.'))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Update User
router.route('/update/:id').post((req, res) => {
  User.findById(req.params.id)
    .then(user => {
      user.username = req.body.username;
      user.gender = req.body.gender;
      user.age = Number(req.body.age);
      user.weight = Number(req.body.weight);
      user.height = Number(req.body.height);
      user.unit = req.body.unit;
      user.activity = req.body.activity;
      user.bmi = Number(req.body.bmi);
      user.bmiCategory = req.body.bmiCategory;
      user.bmr = Number(req.body.bmr);
      user.dailycalories = Number(req.body.dailycalories);

      user.save()
        .then(response => res.json({'data': 'User added!', 'id': response._id}))
        .catch(err => res.status(400).json('Error: ' + err));
    })
    .catch(err => res.status(400).json('Error: ' + err));
});

module.exports = router;const router = require('express').Router();
let Workoutlog = require('../models/workoutlog.model');

// Get All Workoutlogs
router.route('/').get((req, res) => {
  Workoutlog.find()
    .then(workoutlogs => res.json(workoutlogs))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Add Workoutlog
router.route('/add').post((req, res) => {
  const workoutdate = Date.parse(req.body.workoutdate);
  const routinename = req.body.routinename;
  const duration = Number(req.body.duration);
  const username = req.body.username;

  const newWorkoutlog = new Workoutlog({
    workoutdate,
    routinename,
    duration,
    username
  });

  newWorkoutlog.save()
  .then(() => res.json('Workout Log added!'))
  .catch(err => res.status(400).json('Error: ' + err));
});

// Get Workoutlog
router.route('/:id').get((req, res) => {
  Workoutlog.findById(req.params.id)
    .then(workoutlog => res.json(workoutlog))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Delete Workoutlog
router.route('/:id').delete((req, res) => {
  Workoutlog.findByIdAndDelete(req.params.id)
    .then(() => res.json('Workout Log deleted.'))
    .catch(err => res.status(400).json('Error: ' + err));
});

// Update Workoutlog
router.route('/update/:id').post((req, res) => {
  Workoutlog.findById(req.params.id)
    .then(workoutlog => {
      workoutlog.workoutdate = Date.parse(req.body.workoutdate);
      workoutlog.routinename = req.body.routinename;
      workoutlog.duration = Number(req.body.duration);
      workoutlog.username = req.body.username;

      workoutlog.save()
        .then(() => res.json('Workout Log updated!'))
        .catch(err => res.status(400).json('Error: ' + err));
    })
    .catch(err => res.status(400).json('Error: ' + err));
});

module.exports = router;
